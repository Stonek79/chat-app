version: '3.9'

# Этот файл дополняет docker-compose.yml настройками для локальной разработки.
# Он не используется в продакшене.

services:
    next-app:
        # Указываем Docker собирать образ до стадии 'builder', а не 'runner'.
        # 'builder' содержит все dev-зависимости, нужные для hot-reload.
        build:
            target: builder
            args:
                - ENV_FILE=.env.docker
                - UPLOADS_PATH=/app/uploads
        # Сначала собираем все зависимости, потом запускаем dev-сервер.
        # Это гарантирует, что все пакеты из 'packages' будут доступны для Next.js.
        command: sh -c "pnpm --filter @chat-app/core run build:edge-constants && pnpm build && pnpm --filter @chat-app/chat run dev"
        networks:
            - app-network
        volumes:
            - ./apps/chat:/app/apps/chat
            - ./packages:/app/packages
            - uploads:/app/uploads # Общий volume для медиафайлов
            - /app/apps/chat/node_modules
            - /app/apps/chat/.next
        # Указываем файл с переменными окружения для разработки.
        env_file:
            - .env.docker
        environment:
            - UPLOADS_PATH=/app/uploads
        extra_hosts:
            - 'host.docker.internal:host-gateway'

    # Сервер сокетов
    socket-server:
        build:
            target: builder
        # Запускаем сервер с помощью nodemon для автоматической перезагрузки при изменениях.
        command: pnpm --filter @chat-app/socket-server run dev
        networks:
            - app-network
        volumes:
            # Синхронизируем исходный код сокет-сервера.
            - ./apps/socket-server:/app/apps/socket-server
            # Синхронизируем все общие пакеты.
            - ./packages:/app/packages
            - /app/node_modules
        env_file:
            - .env.docker
        environment:
            - UPLOADS_PATH=/app/uploads

    # Для nginx в режиме разработки специфических переопределений не требуется.
    # Основная конфигурация nginx.conf уже настроена на работу с dev-сервером Next.js
    # и раздачу статики из общего volume 'uploads'.
    nginx: {}
    redis: {}
    prisma-studio: {}
