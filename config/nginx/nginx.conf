worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;

    # Определяем upstream для MinIO
    upstream minio_server {
        server minio:9000;
    }

    # Настройки прокси для перенаправления на MinIO
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=minio_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";

    server {
        listen 80;
        server_name localhost;

        location /media/ {
            proxy_pass http://minio_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Включаем кэширование
            proxy_cache minio_cache;
            proxy_cache_valid 200 60m; # Кэшировать успешные ответы на 60 минут
            proxy_cache_valid 404 1m; # Кэшировать 404 на 1 минуту
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Proxy-Cache $upstream_cache_status;

            # Для корректной работы с приватными бакетами MinIO
            # Этот блок нужно будет доработать, когда мы добавим авторизацию на скачивание
            proxy_hide_header 'x-amz-id-2';
            proxy_hide_header 'x-amz-request-id';
            proxy_hide_header 'Set-Cookie';
            proxy_ignore_headers 'Set-Cookie';
        }

        # Опционально: базовый ответ для корневого URL, чтобы проверить, что Nginx работает
        location / {
            return 200 'Nginx proxy for MinIO is running.';
            add_header Content-Type text/plain;
        }
    }
}